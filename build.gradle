plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.example'
version = '1.0.0'
description = 'CDC Agent for MySQL using Debezium'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

ext {
    debeziumVersion = '2.5.0.Final'
    reactorVersion = '3.6.2'
    micrometerVersion = '1.12.2'
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Debezium
    implementation "io.debezium:debezium-api:${debeziumVersion}"
    implementation "io.debezium:debezium-embedded:${debeziumVersion}"
    implementation "io.debezium:debezium-connector-mysql:${debeziumVersion}"

    // Project Reactor
    implementation "io.projectreactor:reactor-core:${reactorVersion}"

    // Monitoring
    implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"

    // Logging
    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.slf4j:slf4j-api'

    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.projectreactor:reactor-test:${reactorVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// JaCoCoレポート設定
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
    }
}

bootJar {
    enabled = true
    mainClass = 'com.example.cdcagent.CdcAgentApplication'
} 